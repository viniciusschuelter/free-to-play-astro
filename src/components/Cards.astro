---
import type { GameInterface } from '../interfaces/game.interface';
import Card from '../components/Card.astro';
import CardReact from '../components/react/CardReact';
import CardVue from '../components/vue/CardVue.vue';
import CardSvelte from '../components/svelte/CardSvelte.svelte';
import CardSolid from '../components/solid-js/CardSolid';
import { FrameworkEnum } from '../interfaces/framework.interface';
import { gameCategories } from '../nanostore/games';

const games: GameInterface[] = Astro.props.games;
const framework: FrameworkEnum = Astro.props.framework;

---

<select-category>
    <div class="dropdown dropdown-dark">
        <select id="selectCategory" class="dropdown-select">
            <optgroup disabled hidden></optgroup>
            {gameCategories?.get().map( (category: string) => <option value={category} label={category} />)}
        </select>
    </div>
</select-category>

<ul role="list" class="link-card-grid">
    {games.map( (game: GameInterface) => {
        return {
            [FrameworkEnum.ASTRO]: <Card game={game} />,
            [FrameworkEnum.REACT]: <CardReact game={game} />,
            [FrameworkEnum.SOLID]: <CardSolid game={game} />,
            [FrameworkEnum.SVELTE]: <CardSvelte game={game} />,
            [FrameworkEnum.VUE]: <CardVue game={game} />,
        }[framework]
    })}
</ul>

<script>
    import { selectedCategory } from '../nanostore/games';

    class SelectCategory extends HTMLElement {

        constructor() {
            super()

            const select: HTMLSelectElement | null = document.querySelector('#selectCategory');

            select?.addEventListener('click', ({target}) => {
                const selected = target?.selectedOptions[0]?.value;
                const category = selectedCategory.get();

                if (selected !== category) {
                    selectedCategory.set(selected);
                    document.querySelectorAll('li').forEach( item => {
                        item.style.display = item.id === selected || selected === 'Select your favorite genre'  ? 'flex' : 'none'
                    })
                }
            });
        }
    }

    customElements.define('select-category', SelectCategory);
</script>

<style>
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
		gap: 1.5rem;
		padding: 0;
	}
</style>